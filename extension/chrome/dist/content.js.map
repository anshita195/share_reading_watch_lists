{"version":3,"file":"content.js","mappings":"AACA","sources":["webpack://reading-watch-list-tracker/./src/content.js"],"sourcesContent":["// Content script to handle page content extraction\nconsole.log('Reading & Watch List Tracker content script loaded');\n\n// Function to extract main content from the page\nfunction extractMainContent() {\n  // Try to find the main content area\n  const mainContent = document.querySelector('main, article, [role=\"main\"], .main-content, #main-content');\n  \n  if (mainContent) {\n    return mainContent.innerText;\n  }\n  \n  // Fallback to body content\n  return document.body.innerText;\n}\n\n// Function to determine if the page is a video\nfunction isVideoPage() {\n  // Check for common video player elements\n  const videoElements = document.querySelectorAll('video, iframe[src*=\"youtube\"], iframe[src*=\"vimeo\"]');\n  return videoElements.length > 0;\n}\n\n// Function to determine if the page is an article\nfunction isArticlePage() {\n  // Check for common article indicators\n  const articleElements = document.querySelectorAll('article, [role=\"article\"], .article, .post, .blog-post');\n  return articleElements.length > 0;\n}\n\n// Send page information to background script\nchrome.runtime.sendMessage({\n  type: 'PAGE_LOADED',\n  data: {\n    url: window.location.href,\n    title: document.title,\n    isVideo: isVideoPage(),\n    isArticle: isArticlePage(),\n    content: extractMainContent(),\n    timestamp: new Date().toISOString()\n  }\n}); "],"names":[],"sourceRoot":""}