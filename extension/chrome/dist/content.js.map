{"version":3,"file":"content.js","mappings":"AACA","sources":["webpack://reading-watch-list-tracker/./src/content.js"],"sourcesContent":["// Content script to handle page content extraction\nconsole.log('Reading & Watch List Tracker content script loaded');\n\n// Function to extract main content from the page\nfunction extractMainContent() {\n  // Try to find the main content area\n  const mainContent = document.querySelector('main, article, [role=\"main\"], .main-content, #main-content');\n  \n  if (mainContent) {\n    return mainContent.innerText;\n  }\n  \n  // Fallback to body content\n  return document.body.innerText;\n}\n\n// Function to determine if the page is a video\nfunction isVideoPage() {\n  // Check for <video> tags\n  const videoElements = document.querySelectorAll('video');\n  if (videoElements.length > 0) return true;\n\n  // Check for common video platforms in URL\n  const videoPlatforms = [\n    'youtube.com/watch',\n    'youtu.be/',\n    'vimeo.com/',\n    'dailymotion.com/video',\n    'twitch.tv/videos',\n    'facebook.com/watch',\n    'bilibili.com/video',\n    'netflix.com/watch',\n    'primevideo.com/detail',\n    'hotstar.com',\n    'zee5.com',\n    'mxplayer.in',\n    'sonyliv.com',\n    'disneyplus.com',\n    'hulu.com/watch',\n    'hbomax.com',\n    'crunchyroll.com/watch'\n  ];\n  if (videoPlatforms.some(platform => window.location.href.includes(platform))) return true;\n\n  // Check for Open Graph video meta tag\n  const ogVideo = document.querySelector('meta[property=\"og:video\"]');\n  if (ogVideo) return true;\n\n  // Check for embedded iframes from video platforms\n  const iframeSelectors = [\n    'iframe[src*=\"youtube.com/embed\"]',\n    'iframe[src*=\"player.vimeo.com\"]',\n    'iframe[src*=\"dailymotion.com/embed\"]',\n    'iframe[src*=\"twitch.tv\"]',\n    'iframe[src*=\"facebook.com/plugins/video\"]'\n  ];\n  for (const selector of iframeSelectors) {\n    if (document.querySelector(selector)) return true;\n  }\n\n  return false;\n}\n\n// Function to determine if the page is an article\nfunction isArticlePage() {\n  // Check for common article indicators\n  const articleElements = document.querySelectorAll('article, [role=\"article\"], .article, .post, .blog-post');\n  return articleElements.length > 0;\n}\n\n// Send page information to background script\nchrome.runtime.sendMessage({\n  type: 'PAGE_LOADED',\n  data: {\n    url: window.location.href,\n    title: document.title,\n    isVideo: isVideoPage(),\n    isArticle: isArticlePage(),\n    content: extractMainContent(),\n    timestamp: new Date().toISOString()\n  }\n}); "],"names":[],"sourceRoot":""}