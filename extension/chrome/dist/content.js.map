{"version":3,"file":"content.js","mappings":"AACA","sources":["webpack://reading-watch-list-tracker/./src/content.js"],"sourcesContent":["// Content script to handle page content extraction\r\nconsole.log('Reading & Watch List Tracker content script loaded');\r\n\r\n// Function to extract main content from the page\r\nfunction extractMainContent() {\r\n  // Try to find the main content area\r\n  const mainContent = document.querySelector('main, article, [role=\"main\"], .main-content, #main-content');\r\n  \r\n  if (mainContent) {\r\n    return mainContent.innerText;\r\n  }\r\n  \r\n  // Fallback to body content\r\n  return document.body.innerText;\r\n}\r\n\r\n// Function to determine if the page is a video\r\nfunction isVideoPage() {\r\n  // Check for common video player elements\r\n  const videoElements = document.querySelectorAll('video, iframe[src*=\"youtube\"], iframe[src*=\"vimeo\"]');\r\n  return videoElements.length > 0;\r\n}\r\n\r\n// Function to determine if the page is an article\r\nfunction isArticlePage() {\r\n  // Check for common article indicators\r\n  const articleElements = document.querySelectorAll('article, [role=\"article\"], .article, .post, .blog-post');\r\n  return articleElements.length > 0;\r\n}\r\n\r\n// Send page information to background script\r\nchrome.runtime.sendMessage({\r\n  type: 'PAGE_LOADED',\r\n  data: {\r\n    url: window.location.href,\r\n    title: document.title,\r\n    isVideo: isVideoPage(),\r\n    isArticle: isArticlePage(),\r\n    content: extractMainContent(),\r\n    timestamp: new Date().toISOString()\r\n  }\r\n}); "],"names":[],"sourceRoot":""}