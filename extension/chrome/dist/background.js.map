{"version":3,"file":"background.js","mappings":"AAcA","sources":["webpack://reading-watch-list-tracker/./src/background.js"],"sourcesContent":["// Initialize WebLLM and load Gemma model\r\nlet model = null;\r\n\r\nasync function initializeLLM() {\r\n  try {\r\n    // TODO: Initialize WebLLM with Gemma-3-1b\r\n    // This will be implemented when we add the WebLLM integration\r\n    console.log('LLM initialization will be implemented');\r\n  } catch (error) {\r\n    console.error('Failed to initialize LLM:', error);\r\n  }\r\n}\r\n\r\n// Track page visits\r\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\r\n  if (changeInfo.status === 'complete' && tab.url) {\r\n    try {\r\n      // Get page content\r\n      const [results] = await chrome.scripting.executeScript({\r\n        target: { tabId },\r\n        func: () => {\r\n          return {\r\n            title: document.title,\r\n            url: window.location.href,\r\n            content: document.body.innerText,\r\n            timestamp: new Date().toISOString()\r\n          };\r\n        }\r\n      });\r\n\r\n      const pageData = results.result;\r\n      \r\n      // Store the data\r\n      chrome.storage.local.get(['trackedPages'], (result) => {\r\n        const trackedPages = result.trackedPages || [];\r\n        trackedPages.push(pageData);\r\n        chrome.storage.local.set({ trackedPages });\r\n      });\r\n\r\n      // TODO: Process content with LLM\r\n      // This will be implemented when we add the WebLLM integration\r\n      \r\n    } catch (error) {\r\n      console.error('Error tracking page:', error);\r\n    }\r\n  }\r\n});\r\n\r\n// Initialize when extension is installed\r\nchrome.runtime.onInstalled.addListener(() => {\r\n  initializeLLM();\r\n  chrome.storage.local.set({ trackedPages: [] });\r\n}); "],"names":[],"sourceRoot":""}