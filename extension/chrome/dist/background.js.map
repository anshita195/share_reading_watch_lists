{"version":3,"file":"background.js","mappings":"AAcA","sources":["webpack://reading-watch-list-tracker/./src/background.js"],"sourcesContent":["// Initialize WebLLM and load Gemma model\nlet model = null;\n\nasync function initializeLLM() {\n  try {\n    // TODO: Initialize WebLLM with Gemma-3-1b\n    // This will be implemented when we add the WebLLM integration\n    console.log('LLM initialization will be implemented');\n  } catch (error) {\n    console.error('Failed to initialize LLM:', error);\n  }\n}\n\n// Track page visits\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n  if (changeInfo.status === 'complete' && tab.url) {\n    try {\n      // Get page content\n      const [results] = await chrome.scripting.executeScript({\n        target: { tabId },\n        func: () => {\n          return {\n            title: document.title,\n            url: window.location.href,\n            content: document.body.innerText,\n            timestamp: new Date().toISOString()\n          };\n        }\n      });\n\n      const pageData = results.result;\n      \n      // Store the data\n      chrome.storage.local.get(['trackedPages'], (result) => {\n        const trackedPages = result.trackedPages || [];\n        trackedPages.push(pageData);\n        chrome.storage.local.set({ trackedPages });\n      });\n\n      // TODO: Process content with LLM\n      // This will be implemented when we add the WebLLM integration\n      \n    } catch (error) {\n      console.error('Error tracking page:', error);\n    }\n  }\n});\n\n// Initialize when extension is installed\nchrome.runtime.onInstalled.addListener(() => {\n  initializeLLM();\n  chrome.storage.local.set({ trackedPages: [] });\n}); "],"names":[],"sourceRoot":""}